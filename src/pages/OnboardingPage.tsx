import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Button from '../components/common/Button';

const OnboardingPage: React.FC = () => {
  const navigate = useNavigate();
  const [currentSlide, setCurrentSlide] = useState(0);
  
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–∞–π–¥–æ–≤
  const slides = [
    {
      title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LifeSprint',
      description: '–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–ø–æ—Å–æ–±–Ω–æ –∑–∞ –º–µ—Å—è—Ü –∏–∑–º–µ–Ω–∏—Ç—å —Ç–≤–æ—é –∂–∏–∑–Ω—å –∫ –ª—É—á—à–µ–º—É.',
      image: 'üöÄ',
    },
    {
      title: '–†–∞–∑–≤–∏–≤–∞–π –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏',
      description: '–ù–∞—É—á–∏—Å—å –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å, –æ—Ç–º–µ—á–∞—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, —Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ª–∏, –ø–æ–≤—ã—Å—å –Ω–∞–≤—ã–∫–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏.',
      image: 'üß†',
    },
    {
      title: '–ß—Ç–æ –∂, –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!',
      description: '–í—Å–µ–≥–æ 28 –¥–Ω–µ–π, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å. –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –≤—ã—Å–æ—Ç–∞–º?',
      image: 'üèÜ',
    },
  ];
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
  const nextSlide = () => {
    if (currentSlide < slides.length - 1) {
      setCurrentSlide(currentSlide + 1);
    } else {
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      navigate('/');
    }
  };
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–ª–∞–π–¥—É
  const prevSlide = () => {
    if (currentSlide > 0) {
      setCurrentSlide(currentSlide - 1);
    }
  };
  
  // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–ª–∞–π–¥—ã
  const skipOnboarding = () => {
    navigate('/');
  };
  
  return (
    <div className="onboarding-page min-h-screen bg-background-light dark:bg-background-dark flex flex-col">
      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
      <div className="fixed top-0 left-0 right-0 flex justify-center p-4">
        <div className="flex space-x-2">
          {slides.map((_, index) => (
            <div
              key={index}
              className={`w-2 h-2 rounded-full ${
                index === currentSlide ? 'bg-primary' : 'bg-gray-300 dark:bg-gray-600'
              }`}
            />
          ))}
        </div>
      </div>
      
      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–∞–π–¥–∞ */}
      <div className="flex-1 flex flex-col items-center justify-center p-6 text-center">
        <div className="text-7xl mb-8">{slides[currentSlide].image}</div>
        <h1 className="text-2xl sm:text-3xl font-bold mb-4">{slides[currentSlide].title}</h1>
        <p className="text-lg text-text-light-light dark:text-text-light-dark mb-12 max-w-md mx-auto">
          {slides[currentSlide].description}
        </p>
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div className="p-6">
        <div className="flex justify-between items-center mb-4">
          {currentSlide > 0 ? (
            <Button variant="outline" onClick={prevSlide}>
              –ù–∞–∑–∞–¥
            </Button>
          ) : (
            <div></div> // –ü—É—Å—Ç–æ–π div –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
          )}
          
          <Button variant="primary" onClick={nextSlide}>
            {currentSlide < slides.length - 1 ? '–î–∞–ª–µ–µ' : '–ù–∞—á–∞—Ç—å'}
          </Button>
        </div>
        
        {currentSlide < slides.length - 1 && (
          <div className="text-center">
            <button
              onClick={skipOnboarding}
              className="text-text-light-light dark:text-text-light-dark hover:underline focus:outline-none py-2"
            >
              –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default OnboardingPage;
